Questions regarding the visualisation itself:

1. What do you see ?
	- What does each color means ?
	- What are the circles ?
	- What are the arrows ?
	- What does the thickness of the arrow mean ?
	- What are the grey circles ?
SubjectB found right away that the nodes were draggable. Overall, he looked around and "tried out" the interface a bit more, clicking on the "help" button, and then the three layout buttons. He liked the force-based layout more than the trees, because he found it easier to read.
He "prepared" for the interview a bit more than Yannick, or maybe it was because I presented him an earlier version of the tool, but anyway he had no trouble understanding what was on screen. Just the question that we were indeed at the "patch" (and not rule) level, and he was able to understand everything.
SubjectB is familiar with the concept of a state machine, which is close to our FSAs. He therefore had an easier time with that as well. However, he seemed a bit confused at first about the possitility of repeated nodes: again, I had to explain it to him before he fully understood.

Just as Yannick did, he went right to "explaining mode", circling groups of nodes and explaining to me why they are there and what happened. Interestingly, his explanation were more technical-oriented: he explained the consequences of our "cluster pattern" to be because they have around 20 rules manipulating GOTOs and that one might trigger before the other for one reason. To summarize, Yannick saw the changes in terms of "what changes in the client code caused these modifications" while SubjectB saw them as "Why could a patch be triggered before, after, or not at all", being less focused on the client code.

2. Observed patterns:
	- Do you see patterns or outliers in the graphs ? If so, point them out.
	- Can you find a meaning for at least one of the pattern ? Explain it.
	Again, when asked about "structures" rather than patterns, SubjectB goes directly to "I would need more time with the tool", which is fair in my opinion. When I give a bit of explanation of what is a "structure", he goes directly to the long loops with added/removed nodes, and gives an interpretation close to the one of Yannick, talking about dead code. The big "cluster pattern" seems to be a bit less clear to him, since it is too complicated to be analyzed in his opinion.

3. Informations:
	- Other than the patterns, do you find the information given by the graph interesting ? Does it seem correct to you ?
	SubjectB does understand well what is going on in the graphs, and it definitely seems correct to him. He does admit that the information is "interesting", a bit unwillingly since he doesn't think it would be very useful in his work.

4. Old version:
	- Do you think this conveys the same information as what you saw previously ? 
	SubjectB mostly guessed that the information is the same, simply because of how the interview was conducted. 

	- Could you find the information we talked about earlier (patterns, names of nodes, changes in probabilities) in this version of the graphs ? Can you estimate how much longer (or how much faster) it would take you to find that same information on this longer graph.
	When I confirmed the information was indeed the same, he did find the information seen on the previous graphs, mostly because of the colors. He simply found (visually) the colors and then looked around it a bit. He does easily admit that it would be longer to find the information.

	- Are there things you could find on this (old version) of the graph that are easier to find / understand / interpret than on the earlier more compact graphs?
	At first, SubjectB tought that there was more info in the uncollapsed graph than in the other one. But when shown that he can open the gray nodes to see what's inside, he was satisfied and said that the compact graph is therefore better.

	- Do you see an improvement from this to the more compact graphs ?
	As seen above, yes SubjectB sees a clear improvement.

5: Overall and features:
	- Do you think this visualisation is a clear representation of changes in a process ?
	SubjectB thinks that not all processes would benefit from such a visualisation. However, he does see how the graphs could be interesting in the context of a specific process having steps and logs of those steps. In that context, he does think the visualisation is a clear representation.

	- Would you make any changes to make it clearer ? Wich ones ?
	SubjectB has no ideas for changes to this specific visualisation

	- Is there a feature that you would really want to add to the compact visualisation ?
		- Content-wise 
		- Regarding the visual aspect
		He would like other layouts for the graphs, closer to the force-based, with the purpose of being more compact.

		- Regarding the dynamics of the visualisation
		- Regarding how to interact with the visualisation

Questions regarding the visualisation in the context of performing a redelivery
6. Observed patterns, continued
	- Do the patterns you see make sense with your "migration expertise" ?
	- Did you expect some patterns that are not present here ?
	As explained above, the patterns do make sense, and SubjectB did not miss anything in particular.


7. Informations, continued
	- Other than the patterns, do you find the information given by the graph useful in your work ?
	This question is discussed at length in other subquestions. SubjectB isn't convinced it would be useful, but sees at least potential. Not in the context of a redelivery though.

	- Could you get the same information without the visualisation ? If so, would it be difficult ? Describe how you would go about it.
	SubjectB thinks it would be really difficult to get the exact same degree of details, and doesn't know how he would do that without the tool.

	- Does the visualisation show information that you wouldn't have thought about getting ?
	No, SubjectB wouldn't have tought about getting this information.

	- Could the information from the visualisation (patterns included) be useful in your work in regards to:
		- Understanding (would it make understanding what changed easier) ?
		SubjectB thinks his level of comprehension is fine and doesn't need helping, but with some time using the tool, it might be helpful.

		- Efficency (would make some of the steps faster/easier) ?
		SubjectB fears that adding steps to the process would instead make the process slower and not faster. When presented with the idea of having only a few files to analyze using metrics would be "okay". He does reiterate that if we use metrics, the best one would be to show the things that happen the least often, because thay might be symtomatic of a bug, or at least they probably didn't get tested.

		- Communication (would make communication to the client easier) ?
		SubjectB is not entirely sure the graphs should be shown to the client, but does agree that ih they were to have a very specific question, the graph could help answer them.

		- Other ?
		As we discussed about it, I asked if he tought presenting this to someone new to the migration process would help them understand it. SubjectB thinks it might give them a concrete idea, but that there is maybe a bit too much details in the graphs for this to be an introduction: he fears it would be overwhelming.

8. Features, continued
	- Regarding your redelivery work specifically, is there a feature that you would really want to add to the compact visualisation ?
		- Content-wise 
		SubjectB would like to highlight also a patch that is new "to a specific file" and not only to the entire migration (i.e. If patch E was in file 3 but not in file 6, and after the redelivery happens in file 6, he would like to see it at a glance via a new color for example).

		- Regarding the visual aspect
		As Yannick did, SubjectB has an issue with the length of the labels cluttering the graphs. He is less inclined to admit that it is "Raincode's fault", and would like at least to have the labels on multiple lines and/or to remove them completely and let them on mouse over only. When explained that it would maybe loose some of the "globality" of the view, he then went to think that Raincode could design shorter (yet still clear) labels specifically for this tool. We both agree that it would be the best option, but would require quite a bit of work and is not something to do now.

		- Regarding the dynamics of the visualisation
		- Regarding how to interact with the visualisation
		SubjectB would like to be able to click on a node and get the migration code corresponding to the patch it represents shown so he can better remember what they all do.

	- Are there changes you would make to what is currently there ? Why ?
	Again, except layouts, no changes were requested.

	- Would adding the features you thought about change your answers to the question about this visualisation making your work more efficient, the communication or the understanding easier ? If so, how ?

	- Could this visualisation be useful in another context than the one of a redelivery ? How ?
	SubjectB sees an alterative use case: when he is thinkering with the code of the migration, he sometimes create one new pattern, or modifies one. For testing he has sample code to migrate and looks at the output along with the logs to make sure his changes didn't break anything. He thinks using our tool in that context might be helpful to see what kind of effect a change on one pattern could have (if it made other patterns obsolete, if it implied lots of changes or not etc).
	In summary, SubjectB thinks that what we did is cool, but in the context of a redelivery, he think there is too much unknown introduced by the changes in the client's code. He would much rather analyze graphs coming from a more "controlled" environement, as he described in this debuging context (he would also probably agree with Yannick's use case since the input code wouldn't change). 


6 To finish off:
	- What do you like/dislike about this visualisation ? Both in the context of a redelivery or in general.
	SubjectB like the interactiveness of the interface, even if he thinks it is perfectible. He also likes the colors to draw attention to the different elements and the "one click" approach of the tool use. As said above, he dislikes some layout elements as well as the label length, and the big clusters-although he admits they are more due to Raincode's procedures.

	- Anything else you'd like to add ?
	Not really (he did explain and show me the migration code itself, which is indeed fairly linear even in the way it is programmed)